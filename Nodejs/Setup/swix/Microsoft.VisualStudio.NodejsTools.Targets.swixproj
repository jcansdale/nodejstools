<?xml version="1.0" encoding="utf-8"?> 
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\SetupProjectBefore.settings" />
  
  <PropertyGroup> 
    <OutputArchitecture>neutral</OutputArchitecture> 
    <OutputLocalized>false</OutputLocalized> 
    <OutputType>Vsix</OutputType>
    <IsPackage>true</IsPackage>
    <TargetName>Microsoft.VisualStudio.NodejsTools.Targets</TargetName>
    <TargetPath>$(BuildOutputRoot)Setup\Microsoft.VisualStudio.NodejsTools.Targets.vsix</TargetPath>
    <WebRoleDll Condition="'$(SignedBinariesPath)' != ''">$(SignedBinariesPath)\Microsoft.NodejsTools.WebRole.dll</WebRoleDll>
    <WebRoleDll Condition="'$(SignedBinariesPath)' == ''">$(BuildOutputRoot)\Binaries\WebRole\Microsoft.NodejsTools.WebRole.dll</WebRoleDll>
    <PackagePreprocessorDefinitions>$(PackagePreprocessorDefinitions);BuildOutputRoot=$(BuildOutputRoot);BuildVersion=$(MsiVersion);WebRoleDll=$(WebRoleDll)</PackagePreprocessorDefinitions>
    <!--Retrigger a build on webrole.dll to pick up signed version. TODO: see if there's a better way to do this.-->
    <MSBuildAllProjects>$(WebRoleDll)</MSBuildAllProjects>
  </PropertyGroup> 
  
  <Target Name="_CopyWixOutputsToPath"
          AfterTargets="AfterBuild"
          Condition="'$(CopyOutputsToPath)' != '' and $(OutputType) == 'Vsix'">
    <PropertyGroup>
      <CopyOutputsToPath Condition="!HasTrailingSlash($(CopyOutputsToPath))">$(CopyOutputsToPath)\</CopyOutputsToPath>
      <_PathSuffix Condition="'$(SignedBinariesPath)' != ''">SignedBinariesUnsignedMsi\</_PathSuffix>
      <_PathSuffix Condition="'$(SignedBinariesPath)' == ''">UnsignedMsi\</_PathSuffix>
    </PropertyGroup>

    <MakeDir Directories="$(CopyOutputsToPath)$(_PathSuffix)"
             ContinueOnError="true" />

    <Message Text="$(CopyOutputsToPath)$(_PathSuffix)$(TargetName)$(TargetExt)"/>
    <Message Text="$(TargetPath)"/>

    <Copy SourceFiles="$(TargetPath)"
          DestinationFiles="$(CopyOutputsToPath)$(_PathSuffix)$(TargetName)$(TargetExt)"
          SkipUnchangedFiles="true" />
  </Target> 

  <ItemGroup> 
    <Package Include="Targets_files.swr" /> 
  </ItemGroup>
  
  <Import Project="$(PackagesPath)\MicroBuild.Core.0.2.0\build\MicroBuild.Core.targets"/>
</Project>